@model Mission_Site.Models.MissionQuestions

@{
    ViewBag.Title = "Edit";
}

<h2>Answer Question</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div style="width:100%">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.missionquestionID)
    @Html.HiddenFor(model => model.missionID)
    @Html.HiddenFor(model => model.userID)
    @Html.HiddenFor(model => model.question)
    
    <div style="width:100%">
        <h4>@Html.LabelFor(model => model.question, htmlAttributes: new { @class = "control-label" })</h4>
        <div class="answer">
            @Html.ValueFor(model => model.question)
            @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
        </div>
        <br />
    </div>

    <div class="form-group">
        <h4>@Html.LabelFor(model => model.answer, htmlAttributes: new { @class = "control-label" })</h4>
        <div class="">
            <p class="form-text  answerform">@Html.TextAreaFor(model => model.answer, htmlAttributes: new { @class = "input-group-text answerform" })</p>
            @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
        </div>
    </div>
    <p>500 Word limit</p>
    <div class="form-group">
        <div class="">
            <input type="submit" value="Save" class="btn btn-outline-dark"  />
            @Html.ActionLink("Go Back", "MissionFAQ", new { id = Model.missionID }, htmlAttributes: new { @class = "btn btn-default btn-outline-dark" })
        </div>
    </div>
</div>
}

<div>
    <p></p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
